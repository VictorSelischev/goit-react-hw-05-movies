{"version":3,"file":"static/js/439.f1fe98ac.chunk.js","mappings":"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","sources":["pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","services/fetchAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n    display: flex;\n    align-items: center;\n    padding: 2px 4px;\n    margin-top: 32px;\n`;\n\nexport const Wrapper = styled.div`\n    display: flex;\n    padding-top: 16px;\n    padding-bottom: 32px;\n`;\n\nexport const Image = styled.img`\n    width: 300px;\n`;\n\nexport const Description = styled.div`\n    padding-left: 32px;\n`;\n\nexport const FilmName = styled.h3`\n    margin-bottom: 12px;\n`;\n\nexport const DescriptionText = styled.p`\n    line-height: 1.4;\n    margin-bottom: 24px;\n`;\n\nexport const DescriptionTitle = styled.h4`\n    padding-top: 8px;\n    margin-bottom: 12px;\n`;","import { useState, useEffect, Suspense } from 'react';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { getMovieInfo } from 'services/fetchAPI';\nimport { Outlet } from 'react-router-dom';\nimport {\n  Button,\n  Image,\n  Wrapper,\n  Description,\n  FilmName,\n  DescriptionText,\n  DescriptionTitle,\n} from './MovieDetails.styled';\nimport { IoArrowUndoSharp } from 'react-icons/io5';\n\nconst addInfos = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'reviews', text: 'Reviews' },\n];\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  // console.log(location);\n\n  useEffect(() => {\n    getMovieInfo(movieId)\n      .then(data => {\n        setMovieInfo(data);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return null;\n  }\n\n  const { poster_path, title, vote_average, overview, genres } =\n    movieInfo;\n\n  const urlMoviePoster = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n\n  return (\n    <>\n      <Link to={backLinkHref} style={{ textDecoration: 'none' }}>\n        <Button type=\"button\">\n          <IoArrowUndoSharp\n            size=\"16\"\n            style={{ marginRight: 4 }}\n          />\n          Go Back\n        </Button>\n      </Link>\n      <Wrapper>\n        <Image src={urlMoviePoster} alt={title} />\n        <Description>\n          <FilmName>{title}</FilmName>\n          <DescriptionText>\n            User score: {Math.round(vote_average * 10)}%\n          </DescriptionText>\n          <DescriptionTitle>Overview</DescriptionTitle>\n          <DescriptionText>{overview}</DescriptionText>\n          <DescriptionTitle>Genres</DescriptionTitle>\n          <DescriptionText>\n            {genres.map(genre => (\n              <span key={genre.id}>{genre.name} </span>\n            ))}\n          </DescriptionText>\n          <DescriptionTitle style={{ borderTop: '1px solid' }}>\n            Additional information\n          </DescriptionTitle>\n          <ul>\n            {addInfos.map(({ href, text }) => (\n              <li key={href}>\n                <Link\n                  to={href}\n                  state={{ from: backLinkHref }}\n                  style={{ lineHeight: 1.4 }}\n                >\n                  {text}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </Description>\n      </Wrapper>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = '1b8e17a420c442be5859016e939643f4';\n\nexport const getMoviesTrending = () => {\n  const urlMoviesTrending = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n  return fetch(urlMoviesTrending).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getMovieInfo = id => {\n  const urlMovieInfo = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n  return fetch(urlMovieInfo).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getMovieCast = id => {\n  const movieCast = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n  return fetch(movieCast).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getMovieReviews = id => {\n  const urlMovieReviews = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  return fetch(urlMovieReviews).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getMovieQuery = query => {\n  const urlMovieQuery = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`;\n  return fetch(urlMovieQuery).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n"],"names":["Button","styled","Wrapper","Image","Description","FilmName","DescriptionText","DescriptionTitle","addInfos","href","text","useState","movieInfo","setMovieInfo","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","getMovieInfo","then","data","catch","error","console","log","poster_path","title","vote_average","overview","genres","urlMoviePoster","to","style","textDecoration","type","size","marginRight","src","alt","Math","round","map","genre","name","id","borderTop","lineHeight","Suspense","fallback","API_KEY","getMoviesTrending","urlMoviesTrending","fetch","response","ok","Error","status","json","urlMovieInfo","getMovieCast","movieCast","getMovieReviews","urlMovieReviews","getMovieQuery","query","urlMovieQuery"],"sourceRoot":""}