{"version":3,"file":"static/js/387.c33b61ad.chunk.js","mappings":"mPAEaA,EAAWC,EAAAA,GAAAA,GAAH,gDAIRC,EAAeD,EAAAA,GAAAA,GAAH,gDAIZE,EAAYF,EAAAA,GAAAA,EAAH,6C,SCuBtB,EA5BgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJN,EAAWM,EAAKC,QACjB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,KAGF,wBACsB,IAAnBF,EAAQa,QACP,oEAEAb,EAAQc,KAAI,SAAAC,GAAM,OAChB,UAACpB,EAAD,YACE,UAACE,EAAD,qBAAsBkB,EAAOC,WAC7B,SAAClB,EAAD,UAAYiB,EAAOE,YAFNF,EAAOG,GADN,KASzB,C,uJC/BD,IAAMC,EAAU,mCAEHC,EAAoB,WAC/B,IAAMC,EAAiB,kEAA8DF,GACrF,OAAOG,MAAMD,GAAmBf,MAAK,SAAAiB,GACnC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYC,EAAe,SAAAV,GAC1B,IAAMW,EAAY,6CAAyCX,EAAzC,oBAAuDC,GACzE,OAAOG,MAAMO,GAAcvB,MAAK,SAAAiB,GAC9B,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYG,EAAe,SAAAZ,GAC1B,IAAMa,EAAS,6CAAyCb,EAAzC,4BAA+DC,EAA/D,mBACf,OAAOG,MAAMS,GAAWzB,MAAK,SAAAiB,GAC3B,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYtB,EAAkB,SAAAa,GAC7B,IAAMc,EAAe,6CAAyCd,EAAzC,4BAA+DC,EAA/D,0BACrB,OAAOG,MAAMU,GAAiB1B,MAAK,SAAAiB,GACjC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYM,EAAgB,SAAAC,GAC3B,IAAMC,EAAa,4DAAwDhB,EAAxD,kBAAyEe,GAC5F,OAAOZ,MAAMa,GAAe7B,MAAK,SAAAiB,GAC/B,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/fetchAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  margin-bottom: 28px;\n`;\n\nexport const SectionTitle = styled.h4`\n  margin-bottom: 16px;\n`;\n\nexport const Paragraph = styled.p`\n  line-height: 1.4;\n`;\n","import { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/fetchAPI';\nimport { useEffect, useState } from 'react';\nimport { ListItem, Paragraph, SectionTitle } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(data => {\n        setReviews(data.results);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        reviews.map(review => (\n          <ListItem key={review.id}>\n            <SectionTitle>Autor: {review.author}</SectionTitle>\n            <Paragraph>{review.content}</Paragraph>\n          </ListItem>\n        ))\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","const API_KEY = '1b8e17a420c442be5859016e939643f4';\n\nexport const getMoviesTrending = () => {\n  const urlMoviesTrending = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n  return fetch(urlMoviesTrending).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getMovieInfo = id => {\n  const urlMovieInfo = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n  return fetch(urlMovieInfo).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getMovieCast = id => {\n  const movieCast = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n  return fetch(movieCast).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getMovieReviews = id => {\n  const urlMovieReviews = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  return fetch(urlMovieReviews).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getMovieQuery = query => {\n  const urlMovieQuery = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`;\n  return fetch(urlMovieQuery).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n"],"names":["ListItem","styled","SectionTitle","Paragraph","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","data","results","catch","error","console","log","length","map","review","author","content","id","API_KEY","getMoviesTrending","urlMoviesTrending","fetch","response","ok","Error","status","json","getMovieInfo","urlMovieInfo","getMovieCast","movieCast","urlMovieReviews","getMovieQuery","query","urlMovieQuery"],"sourceRoot":""}